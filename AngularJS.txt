AngularJS :-
-	AngularJS is a MVC style JavaScript Framework for creating Single Page Application (SPA) in the projects.
-	Additional content brought into the web page without refresh.
-	AngularJS is open source and licensed under the Apache license version 2.0.
-	It is now maintained by Google. Its latest version is 1.X.


Features :-
-	Data-binding	:	It is the automatic synchronization of data between model and view components.
-	Directives	:	Directives are markers on DOM elements (such as elements, attributes, css, and more). 
					These can be used to create custom HTML tags that serve as new, custom widgets. AngularJS has built-in directives (ngBind, ngModel...)
-	Templates	:	These are the rendered view with information from the controller and model. 
					These can be a single file (like index.html) or multiple views in one page using "partials".
-	Filters		:	These select a subset of items from an array and returns a new array.
-	Dependency Injection	:	AngularJS has a built-in dependency injection subsystem that helps the developer by making the
								application easier to develop, understand, and test.
				
				
Disadvantages of AngularJS :-
-	Not Secure	:	Being JavaScript only framework, application written in AngularJS are not safe. 
					Server side authentication and authorization is must to keep an application secure.
-	Not degradable	:	 If your application user disables JavaScript then user will just see the basic page and nothing more.


Directive :-
-	AngularJS directives are used to extend HTML. 
-	These are special attributes starting with ng- prefix.
1)	ng-app	:	This directive defines and links an AngularJS application to HTML.
				Every thing inside this is angular application.
2)	ng-model:	This directive binds the values of AngularJS application data to HTML input controls.
3)	ng-bind	:	This directive binds the AngularJS Application data to HTML tags.
4)	ng-init :	This directive initializes application data.
5)	ng-repeat : This directive repeats html elements for each item in a collection. (foreach loop)
6)	ng-controller
7)  ng-include : include other page. Ex: <header ng-include="'header.html'"></header>
8)	ng-show ng-hide	:	show hide
9)	ng-click : onclick event fire
10)	ng-submit
11)	ng-src	:	image path
12)	ng-view	:	ng-view tag simply creates a place holder where a corresponding view can be placed based on the configuration.
13)	ng-template	:	this is used to create an html view using script tag. 
					Just like <a href> tag generate like
					It contains "id" attribute which is used by $routeProvider to map a view with a controller.



Expressions :-
-	Expressions are used to bind application data to html. 
-	Expressions are written inside double braces like {{expression}}. 
-	Expressions behaves in same way as ng-bind directives.
-	AngularJS application expressions are pure javascript expressions and outputs the data where they are used.


Modules :-
-	Modules are used to separate logics say services, controllers, application etc. and keep the code clean. 
-	We define modules in separate js files and name them as per the module.js file.


Controllers :-
-	AngularJS application mainly relies on controllers to control the flow of data in the application. 
-	controller is defined using ng-controller directive. 
-	A controller is a JavaScript object containing attributes/properties and functions. 
-	Each controller accepts $scope as a parameter which refers to the application/module that controller is to control.
-	$Scope is a special javascript object which plays the role of joining controller with the views.
-	Scope contains the model data. In controllers, model data is accessed via $scope object.

Views :-
-	AngularJS supports Single Page Application via multiple views on a single page. 
-	To do this AngularJS has provided ng-view and ng-template directives and $routeProvider services.
-	$routeProvider is the key service which set the configuration of urls,
	and map them with the corresponding html page or ng-template, and attach a controller with the same.
-	Config is method which execute before your application start.
-	ng-view   :   ng-view tag simply creates a place holder where a corresponding view can be placed based on the configuration.
-	In javascript ng-route convert into camel case like ngRoute

JSON & $http :-
-	AngularJS provides $http control which works as a service to read data from the server/file. 
-	The server makes a database call to get the desired records. 
-	AngularJS needs data in JSON format. 
-	Once the data is ready, $http can be used to get the data from server/file in the following manner âˆ’
-	$http.get('data/students.json').then(function(response){
      $scope.students = response.data;
    });
-	for success -> response, for error -> error


Custom Directives :-
-	In javascript random-student convert into camel case like randomStudent	
-	restrict : 'E' or 'A' or 'C' or 'M'
-	E for element(inside html <random-student>), A for attribute(inside html like ng-src), C for css, M for comment
-	Custom directives are used in AngularJS to extend the functionality of HTML. 
-	Custom directives are defined using "directive" function. 